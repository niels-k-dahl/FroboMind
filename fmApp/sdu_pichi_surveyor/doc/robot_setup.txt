The purpose of this file is to keep track of the changes needed to setup the Pichi robot. 
It might some day become a nice tutorial on frobomind.org
Questions: leon@frobomind.org

The system consists of two computers, referred as the robot computer(the computer on the robot) and
the remote computer (the computer not on the robot...)

Prior to these changes, both computers are assumed to be running ubuntu 12.10, ROS Groovy and FroboMind

1) Setup an ad hoc network on the robot computer with the address 192.168.1.1 and subnet 255.255.255.0
	Make sure to check the "connect automatically" and that no other networks have this optin checked.
	Log on the network from the remote computer but with address 192.168.1.2
	
2) Install the ssh server:
	sudo apt-get install openssh-server
	
3) Log on the ad hoc network with the remote computer and ssh to the robot computer with
	ssh robot@192.168.1.1 (robot is the user name)
	
You could also add the line '192.168.1.1 pichi' to your /etc/hosts file and ssh with
	ssh robot@pichi

4) A file named remote.sh is used :
The last line is for auto-running at reboot and can be omitted.
The same file should be created on the remote computer, but with ROS_HOSTNAME being 192.168.1.2

5) Set up symlinks for USB devices. This way you are sure to get all tty's connected right when the robot starts.
Create a file in /etc/udev/rules.d/ and name it 99-pichi.rules (The number is a priority and the name is arbitrary)
The file must contain one entry for each device. Use dmesg to get the id's right.
	SUBSYSTEMS=="usb", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6001", ATTRS{serial}=="FTUTUNWH", GROUP="dialout", MODE="0666", SYMLINK+="gps"
	SUBSYSTEMS=="usb", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6001", ATTRS{serial}=="A400fduA", GROUP="dialout", MODE="0666", SYMLINK+="imu"

Now /dev/gps and /dev/imu can be used to open the ports.

6) Activate auto run. 
	sudo apt-get install screen					# Installs an alternative terminal that can be used remotely 
	sudo ln -s ~/remote.sh /etc/init.d/pichi	# Creates a link to the remote.sh file
	sudo chmod 754 ~/remote.sh					# Makes the script executable
	sudo update-rc.d pichi start 50 4 .			# Start when all GUI stuff is ready (4)
	